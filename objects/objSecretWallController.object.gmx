<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRevealingTiles</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999000</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// secrets! if megaman enters a Secret Reveal Zone, tiles
// on the layer this is set to will vanish to reveal a Secret Room!
// resets if you leave and reenter the section

//@cc change the depth to change what layer gets wiped away
depth = 999000;

//@cc reveal zones will only affect reveal controllers with the same index.
index = 0;

triggered = 0;
triggerLocX = undefined;
triggerLocY = undefined;

displaySurface = noone;
displaySurfaceMask = noone;
init = false;

lvis = false;

fade = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var d = floor(depth);

//grab tiles on assigned layer
if (!init)
{
    tiles = tile_get_ids_at_depth(floor(depth));
    init = true;
}

// allocate surface
if (!surface_exists(displaySurface) || !surface_exists(displaySurfaceMask))
{
    surface_free(displaySurface);
    surface_free(displaySurfaceMask);
    displaySurface = surface_create(view_wview, view_hview);
    displaySurfaceMask = surface_create(view_wview, view_hview);
}

//if reactivatinng from switching sections, fade in
if instance_exists(objSectionSwitcher)
{
    fade = min(fade + 0.15, 1);
    triggered = 0;
}
//if not activated, check to see if we should activate
else if triggered == 0
{   
    fade = 0;
    with(objMegaman)
    {
        if instance_place(x, y, objSecretRevealZone)
            &amp;&amp; instance_place(x, y, objSecretRevealZone).index = other.index
        {
            other.triggered = 16;
            other.triggerLocX = bboxGetXCenter();
            other.triggerLocY = bboxGetYCenter();
            playSFX(sfxUnlocked);
        }
    }
}
else
{   //once activated, do wipe effect
    triggered = triggered + max(triggered * 0.1, 10);
}

//manipulate visibility of associated layer
if triggered == 0 &amp;&amp; floor(fade) == fade
    tile_layer_show(d);
if triggered != 0
    tile_layer_hide(d);
//manipulate visibility of self
if triggered &gt;= 1000 || (triggered == 0 &amp;&amp; floor(fade) == fade)
    visible = false;
else
    visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clear surfaces
surface_free(displaySurface);
surface_free(displaySurfaceMask);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// surface (tiles)
surface_set_target(displaySurface);
draw_clear_alpha(c_white, 0);
for (var i = 0; i &lt; array_length_1d(tiles); i++)
{
    var tile = tiles[i];
    draw_background_part(
        tile_get_background(tile),
        tile_get_left(tile), tile_get_top(tile),
        tile_get_width(tile), tile_get_height(tile),
        tile_get_x(tile) - view_xview, tile_get_y(tile) - view_yview);
}
surface_reset_target();

//if fading, draw fade and quit
if floor(fade) != fade
{
    draw_set_alpha(fade);
    draw_surface(displaySurface, view_xview, view_yview);
    draw_set_alpha(1);
    exit;
}

// mask (reveals tiles)
surface_set_target(displaySurfaceMask);
draw_clear_alpha(c_white, 1);
draw_set_color(c_white);
draw_set_alpha(0);
draw_set_circle_precision(64);
draw_set_blend_mode_ext(bm_src_alpha_sat, bm_zero);

draw_circle(triggerLocX - view_xview, triggerLocY - view_yview, triggered, false);

draw_set_alpha(1);

// apply tiles to mask
draw_set_blend_mode_ext(bm_dest_alpha, bm_zero);
draw_surface(displaySurface, 0, 0);
draw_set_blend_mode(bm_normal);
surface_reset_target();

// draw surface on screen
draw_surface(displaySurfaceMask, view_xview, view_yview);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
