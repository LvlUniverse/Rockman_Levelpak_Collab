<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTyphoonFan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///a fan on the floor or ceiling. pushes mega away from it when he uses funnel on it
event_inherited();

bubbleTimer = -1;

canDamage = false;
canHit = false;
grav = 0;

animSpeed = 0;

//isMaster = false;
runOnceVar = true;
does = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>runOnceVar = true;
does = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if entityCanStep()
{
    if(runOnceVar)
    {
        with(object_index) //run once per step no matter the number of fans
            runOnceVar = false;
        
        //step one: find active, held typhoon funnels
        var pushForceUp, pushForceDown, me;
        with(objTyphoonFunnel)
        {
            if disperse &gt; 0 || !instance_exists(parent)
                continue;
            //step two: push said funnel's owner based on nearby fans
            with(parent)
            {
                //no pushing up off the floor
                if ground
                    continue;
            
                me = id;
                pushForceUp = 0;
                pushForceDown = 0;
                //iterate through all fans to get the pushiest ones, up and down
                with(objTyphoonFan)
                {
                    if me.bbox_right &gt; bbox_left &amp;&amp; me.bbox_left &lt; bbox_right
                        &amp;&amp; ((image_yscale &gt; 0 &amp;&amp; me.bbox_top &lt; bbox_bottom)
                        || image_yscale &lt;= 0 &amp;&amp; me.bbox_bottom &gt; bbox_top)
                    {
                        if image_yscale &gt; 0
                            pushForceUp = max(animSpeed, pushForceUp);
                        else
                            pushForceDown = max(animSpeed, pushForceDown);
                        does = true;
                    }
                }
                //push by the combined force of pushiest up fan and pushiest down fan
                shiftObject(0, pushForceDown - pushForceUp, true);
            }
        }
    }
    
    //animate if pushing someone
    if(does)
        animSpeed = min(2, animSpeed + 0.3);
    else
        animSpeed = (animSpeed * 0.85) * (animSpeed &gt; 0.02);
    image_index += animSpeed * 0.25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset vars on respawn
event_inherited();

animSpeed = 0;
does = false;
//isMaster = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
