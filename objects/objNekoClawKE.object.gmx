<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNekoClaw</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_index = 2;

bulletLimitCost = 1;

contactDamage = 2;

penetrate = 3;
pierces = 2;    //needs to survive every time it hits an enemy, even if it can't do damage afterwards

dist = 0;

turnLock = undefined;
grappleLock = undefined;

grapplingEnemy = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clear locks when destroyed
if turnLock != undefined
    lockPoolRelease(turnLock);
if grappleLock != undefined
     lockPoolRelease(grappleLock);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (!global.frozen)
{
    //die if parent is gone
    if !instance_exists(parent)
    {
        instance_destroy();
        exit;
    }
    
    //force player into shooting pose
    parent.shootTimer = 14;

    //movement
    if canDamage == true
    {   //extend
        dist += 6;
        
        //returns or grapples if it hits a wall
        if placeCollision(x, y)
        {
            grapplingEnemy = false;
            event_user(8);
        }
        
        if dist &gt; 96    //return when it extends too far
            canDamage = false;
    }
    else if grappleLock == undefined
    {   //retract
        dist -= 6;
        //delete when fully returned
        if dist &lt; 0
        {
            instance_destroy();
            exit;
        }
    }
    else
    {   //pull in player
        parent.xspeed = 6 * image_xscale;
        dist -= 6;
        
        //degrapple if the player hits a wall
        //degrapple before slamming player into enemy
        if (parent.xcoll != 0)
            || (grapplingEnemy == true &amp;&amp; (dist &lt; 12))
        {
            lockPoolRelease(grappleLock);
            grappleLock = undefined;
        }
        //degrapple if we return before either happens
        if dist &lt; -16
        {
            instance_destroy();
            exit;
        }
        exit;
    }
    //moves with player instead of moving via xspeed and yspeed
    x = parent.x + (16 * parent.image_xscale) + (dist * image_xscale);
    y = parent.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///while equipped...
//shoot when shot
if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    i = fireWeapon(16, 0, objNekoClawKE, 1, 1, 1, 0);
    if (instance_exists(i))
    {
        //sound
        playSFX(sfxStegorusMissile);
        
        //lock the player's ability to turn around
        i.turnLock = lockPoolLock(localPlayerLock[PL_LOCK_TURN]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///weapon setup
weaponSetup("NEKO CLAW KE", make_color_rgb(228, 92, 16), c_white, sprWeaponIconsSlashClaw);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return or grapple when it hits an enemy
canDamage = false;

//don't grapple to enemies that are killed by this blow
if (grapplingEnemy == true) &amp;&amp; (other.healthpoints &lt;= global.damage)
    exit;
    
//grapple to the enemy or wall if fire is held
if instance_exists(parent) &amp;&amp; global.keyShoot[parent.playerID]
{
    //turning is already locked, no need to complicate the lock pool
    grappleLock = lockPoolLock(parent.localPlayerLock[PL_LOCK_MOVE],
        parent.localPlayerLock[PL_LOCK_JUMP], 
        parent.localPlayerLock[PL_LOCK_GRAVITY], 
        parent.localPlayerLock[PL_LOCK_CLIMB], 
        parent.localPlayerLock[PL_LOCK_SLIDE]);
    parent.xspeed = 0;
    parent.yspeed = 0;
    image_index += 4;
    playSFX(sfx4MIWireAdaptorLatch);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///return when deflected, never grapple
playSFX(sfxReflect);
canDamage = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw a chain connecting claw to megaman
if instance_exists(parent)
{
    var tx = parent.x + (parent.image_xscale * 16);
    var ty = parent.y;
    
    //seven links total: but two of the links are the buster and the claw itself
    for (var i = 1 / 7; i &lt; 1; i += 1 / 7;)
        draw_sprite(sprNekoClawChain, (i + 1) % 2, 
            x - ((x - tx) * i), 
            y - ((y - ty) * i));
}

event_inherited();  //draw itself, too
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
