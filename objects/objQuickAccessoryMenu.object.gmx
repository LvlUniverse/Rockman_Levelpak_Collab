<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPauseMenuBG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///specifically the one that froks off from the pause menu
if (instance_number(object_index) &gt; 1) || !instance_exists(objPauseMenu)
{
    instance_destroy();
    exit;
}

link = noone;

phase = 0;

option = 1;
quickScrollTimer = 25;

scrollOff = 80;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open and close behavior

switch (phase)
{
    case 0: //pan in
        visible = true;
        link.scrollX -= 12;
        if link.scrollX &lt;= -256
        {
            link.scrollX = -256;
            phase = 2;
        }
        break;
    
    case 1: //pan out
        link.scrollX += 12;
        if link.scrollX &gt;= 0
        {
            link.scrollX = 0;
            instance_destroy();
            exit;
        }
        break;
}       //phase 2 for the real menu: done elsewhere
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu movement &amp; cancelling
if phase == 2
{
    // exit with L button
    if global.keyWeaponSwitchLeftPressed[0]
    {
        selected = true;
        if link == noone
            phase++;
        else
            phase = 1;
        playSFX(sfxSkullAmulet);
        exit;
    }
   
    /*
    //left and right controlling 
    dir = (global.keyRightPressed[0] || (global.keyRight[0] &amp;&amp; quickScrollTimer &lt;= 0)) - (global.keyLeftPressed[0] || (global.keyLeft[0] &amp;&amp; quickScrollTimer &lt;= 0))
        + ((global.keyWeaponSwitchRightPressed[0] - global.keyWeaponSwitchLeftPressed[0]) * 4);
    if (dir != 0)
    {
        var lo = option;
        option += dir;
        option = clamp(option, 0, cpTotal);
        if lo != option //if option actually changed
            playSFX(sfxWeaponSwitch);
        else
            quickScrollTimer = 25;
    }
    //quick scroll timer handling
    if (global.keyLeft[0] ^^ global.keyRight[0])
    {
        if (quickScrollTimer-- &lt;= 0)
            quickScrollTimer = 9;
    }
    else
        quickScrollTimer = 25;
    */
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///selecting an option

if (global.keyJumpPressed[0] || global.keyPausePressed[0])
{
    //todo
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(link)
{
    drawXPosition = link.x + 256;
    drawYPosition = link.y;
}
else
{   //center display on non-standard resolutions
    drawXPosition = view_xview[0] + view_wview[0] / 2 - 128;
    drawYPosition = view_yview[0] + view_hview[0] / 2 - 112;
}
var cntr = view_wview / 2;

//text alignment
draw_set_halign(fa_center);
draw_set_valign(fa_top);

//todo: all
draw_sprite(sprite_index, 3, drawXPosition, drawYPosition);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
